<Window x:Class="PresentationWPF.Views.MainView"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:viewModels="clr-namespace:PresentationWPF.ViewModels"
        xmlns:views="clr-namespace:PresentationWPF.Views"
        xmlns:custom="clr-namespace:PresentationWPF.CustomControls"
        mc:Ignorable="d" d:DataContext="{d:DesignInstance viewModels:MainViewModel}"
        WindowStyle="SingleBorderWindow"
        Background="Transparent"
        MinHeight="550" MinWidth="800"
        Height="550" Width="800"
        x:Name="Window"
        >
  <!-- <Window.DataContext> -->
  <!--     <viewModels:MainViewModel/> -->
  <!-- </Window.DataContext> -->
  <Border
    Name="WindowBorder"
    ClipToBounds="True"
    Background="{DynamicResource Background}"
    BorderBrush="#717171"
    BorderThickness="4"
    UseLayoutRounding="True">
    <Border.Resources>
      <DataTemplate DataType="{x:Type viewModels:GuestCatalogViewModel}">
        <views:GuestCatalogView />
      </DataTemplate>

      <DataTemplate DataType="{x:Type viewModels:GuestCartViewModel}">
        <views:GuestCartView />
      </DataTemplate>

      <DataTemplate DataType="{x:Type viewModels:LoginViewModel}">
        <views:LoginView />
      </DataTemplate>

      <DataTemplate DataType="{x:Type viewModels:SignUpViewModel}">
        <views:SignUpView />
      </DataTemplate>

      <DataTemplate DataType="{x:Type viewModels:ClientCatalogViewModel}">
        <views:ClientCatalogView />
      </DataTemplate>

      <DataTemplate DataType="{x:Type viewModels:FilterViewModel}">
        <views:FilterView />
      </DataTemplate>


      <DataTemplate DataType="{x:Type viewModels:PersonalCabinetViewModel}">
        <views:PersonalCabinetView />
      </DataTemplate>

      <DataTemplate DataType="{x:Type viewModels:ClientCabinetViewModel}">
        <views:ClientCabinetView />
      </DataTemplate>

      <DataTemplate DataType="{x:Type viewModels:ClientCartViewModel}">
        <views:ClientCartView />
      </DataTemplate>
      
      <DataTemplate DataType="{x:Type viewModels:AdminViewModel}">
        <views:AdminView/>
      </DataTemplate>
      
      <DataTemplate DataType="{x:Type viewModels:AdminNewEntityViewModel}">
        <views:NewEntityView/>
      </DataTemplate>
      
      <DataTemplate DataType="{x:Type viewModels:AdminProductViewModel}">
        <views:NewProductView/>
      </DataTemplate>
      
      <DataTemplate DataType="{x:Type viewModels:AdminPharmacyViewModel}">
        <views:NewPharmacyView/>
      </DataTemplate>
      
      <DataTemplate DataType="{x:Type viewModels:AdminPharmacistViewModel}">
        <views:NewPharmacistView/>
      </DataTemplate>

      <DataTemplate DataType="{x:Type viewModels:PharmacistCheckoutViewModel}">
        <views:PharmacistCheckoutView/>
      </DataTemplate>
      
      <DataTemplate DataType="{x:Type viewModels:PharmacistNewOrdersAndProductsViewModel}">
        <views:PharmacistNewOrdersAndProductsView/>
      </DataTemplate>

      <!-- -->
      <!-- <DataTemplate DataType="{x:Type UserEditInfoViewModel}"> -->
      <!--     <UserEditInfoView/> -->
      <!-- </DataTemplate> -->
      <!-- -->
      <!-- <DataTemplate DataType="{x:Type PharmacistServiceViewModel}"> -->
      <!--     <PharmacistServiceView/> -->
      <!-- </DataTemplate> -->
      <!-- -->
      <!-- <DataTemplate DataType="{x:Type AdminServiceViewModel}"> -->
      <!--     <AdminServiceView/> -->
      <!-- </DataTemplate> -->

    </Border.Resources>

    <Grid>
      <Grid.RowDefinitions>
      </Grid.RowDefinitions>
      
      <!-- <Button -->
      <!--   Background="Transparent"  -->
      <!--   HorizontalAlignment="Right" -->
      <!--   VerticalAlignment="Center" -->
      <!--   Margin="5 5" Command="{Binding CloseCommand}" -->
      <!-- > -->
      <!--   <Image Source="{DynamicResource DismissIcon}"/> -->
      <!-- </Button> -->
      
      
      <custom:Modal
        Grid.RowSpan="2"
        Grid.Row="0" Panel.ZIndex="2"
        HorizontalAlignment="Center"
        VerticalAlignment="Center"
        IsOpen="{Binding IsPopupOpen}"
        BorderThickness="3"
        BorderBrush="#717171"
        Content="{Binding CurrentPopupViewModel}"
      />


      <Grid>
        <custom:Modal
          Background="{DynamicResource Background}"
          Panel.ZIndex="6" 
          IsOpen="{Binding IsModalOpen}"
          Content="{Binding CurrentModalViewModel}"
        />
        <ContentControl Grid.Row="1" IsHitTestVisible="{Binding IsHitTestVisible}" Content="{Binding CurrentViewModel}">
          <ContentControl.Effect>
            <BlurEffect Radius="{Binding BlurRadius}" KernelType="Gaussian"/>
          </ContentControl.Effect>
        </ContentControl>
      </Grid>
    </Grid>

  </Border>
</Window>